{"version":3,"sources":["test-jumbo.jpg","components/boilerplate/Navbar.jsx","components/boilerplate/Footer.jsx","components/header/Jumbotron.jsx","components/content/UL.jsx","components/content/Showcase.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","document","getElementById","style","top","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","tabIndex","aria-disabled","placeholder","Component","Footer","aria-describedby","Jumbotron","data-ride","src","logo","alt","UL","Showcase","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bfcbda42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test-jumbo.9a3ad27a.jpg\";","import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    /* When the user scrolls down, hide the navbar. When the user scrolls up, show the navbar */\r\n    var prevScrollpos = window.pageYOffset;\r\n    window.onscroll = function () {\r\n      var currentScrollPos = window.pageYOffset;\r\n      if (prevScrollpos > currentScrollPos) {\r\n        document.getElementById(\"navbar\").style.top = \"0\";\r\n      } else {\r\n        document.getElementById(\"navbar\").style.top = \"-80px\";\r\n      }\r\n      prevScrollpos = currentScrollPos;\r\n    };\r\n    //   TODO Have navbar links slide you down to positions on the page.\r\n    return (\r\n      <div className=\"navi\">\r\n        <nav\r\n          id=\"navbar\"\r\n          className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n        >\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Navbar\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Home <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Link\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Action\r\n                  </a>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Another action\r\n                  </a>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Something else here\r\n                  </a>\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link disabled\"\r\n                  href=\"#\"\r\n                  tabIndex=\"-1\"\r\n                  aria-disabled=\"true\"\r\n                >\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <input\r\n                className=\"form-control mr-sm-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-success my-2 my-sm-0\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer-container\">\r\n        <footer className=\"footer\">\r\n          <div className=\"d-flex justify-content-around\">\r\n            <form className=\"form-inline\">\r\n              <input\r\n                className=\"form-control form-control-sm mr-3 w-100\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button\r\n                className=\"btn btn-sm btn-primary footer-btn\"\r\n                type=\"button\"\r\n              >\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div className=\"footer-copyright text-center col-md\">\r\n              Â© 2020 Copyright:\r\n              <a href=\"/\"> Ryan Keys</a>\r\n            </div>\r\n            <form className=\"form-inline\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm mr-3 w-100\"\r\n                placeholder=\"Your email\"\r\n                aria-label=\"Your email\"\r\n                aria-describedby=\"basic-addon2\"\r\n              />\r\n              <button\r\n                className=\"btn btn-sm btn-primary footer-btn\"\r\n                type=\"button\"\r\n              >\r\n                Sign up\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport logo from \"../../test-jumbo.jpg\";\r\nexport default class Jumbotron extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-container\">\r\n        <div className=\"carousel\">\r\n          <div\r\n            id=\"carouselExampleSlidesOnly\"\r\n            className=\"carousel slide\"\r\n            data-ride=\"carousel\"\r\n          >\r\n            <div className=\"carousel-inner\">\r\n              <div className=\"carousel-item active\">\r\n                <img src={logo} alt=\"First slide\" />\r\n              </div>\r\n              <div className=\"carousel-item\">\r\n                <img src={logo} alt=\"Second slide\" />\r\n              </div>\r\n              <div className=\"carousel-item\">\r\n                <img src={logo} alt=\"Third slide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"jumbotron\">\r\n          <div className=\"jumbotron-content\">\r\n            <h1 className=\"display-10\">Hello, World!</h1>\r\n            <br></br>\r\n            <p className=\"lead\">\r\n              This is a simple hero unit, a simple jumbotron-style component for\r\n              calling extra attention to featured content or information.\r\n            </p>\r\n            <hr className=\"my-4\" />\r\n            <p>\r\n              It uses utility classNamees for typography and spacing to space\r\n              content out within the larger container.\r\n            </p>\r\n            <div className=\"learnMore\">\r\n              <a\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"jumbotron-btn\"\r\n                href=\"#\"\r\n                role=\"button\"\r\n              >\r\n                Learn more\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class UL extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"UL-container d-flex justify-content-around\">\r\n        <h1>Re</h1>\r\n        <ul className=\"skills-UL\">\r\n          <li>Lorem, ipsum dolor.</li>\r\n          <li>Lorem, ipsum dolor.</li>\r\n          <li>Lorem, ipsum dolor.</li>\r\n          <li>Lorem, ipsum dolor.</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport logo from \"../../test-jumbo.jpg\";\r\n\r\nexport default class Showcase extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex justify-content-between showcase-wrap\">\r\n        <div className=\"showcase-item\">\r\n          <h1 className=\"showcase-obj\">Showcase Item</h1>\r\n          <img className=\"showcase-img\" src={logo}></img>\r\n          <p className=\"showcase-p\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut nihil\r\n            vero ipsum? Dolores quasi vitae natus ad adipisci odit dolorem!\r\n          </p>\r\n        </div>\r\n        <div className=\"showcase-item\">\r\n          <h1 className=\"showcase-obj\">Showcase Item</h1>\r\n          <img className=\"showcase-img\" src={logo}></img>\r\n          <p className=\"showcase-p\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut nihil\r\n            vero ipsum? Dolores quasi vitae natus ad adipisci odit dolorem!\r\n          </p>\r\n        </div>\r\n        <div className=\"showcase-item\">\r\n          <h1 className=\"showcase-obj\">Showcase Item</h1>\r\n          <img className=\"showcase-img\" src={logo}></img>\r\n          <p className=\"showcase-p\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut nihil\r\n            vero ipsum? Dolores quasi vitae natus ad adipisci odit dolorem!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Navbar from \"./components/boilerplate/Navbar\";\nimport Footer from \"./components/boilerplate/Footer\";\nimport Jumbotron from \"./components/header/Jumbotron\";\nimport UL from \"./components/content/UL\";\nimport \"./App.css\";\nimport Showcase from \"./components/content/Showcase\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Jumbotron />\n      <div className=\"body-container\">\n        <Showcase />\n        <UL />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}